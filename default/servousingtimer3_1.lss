
servousingtimer3_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ac  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000063  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000031f  00000000  00000000  00000283  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000132  00000000  00000000  000005a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000377  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000080  00000000  00000000  00000a4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000011f  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000128  00000000  00000000  00000beb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000138  00000000  00000000  00000d13  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
  64:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <T0Delay>:
 }
 }
 void T0Delay()//for 1500 micro second
 {
  
  TCNT1H=(-15957)>>8;//0xC1;
  6c:	81 ec       	ldi	r24, 0xC1	; 193
  6e:	8d bd       	out	0x2d, r24	; 45
  TCNT1L=(-15957);//0xAB;
  70:	8b ea       	ldi	r24, 0xAB	; 171
  72:	8c bd       	out	0x2c, r24	; 44
  TCCR1A=0x00;
  74:	1f bc       	out	0x2f, r1	; 47
  TCCR1B=0x01;
  76:	81 e0       	ldi	r24, 0x01	; 1
  78:	8e bd       	out	0x2e, r24	; 46
   while((TIFR&(0x1<<TOV1))==0);
  7a:	08 b6       	in	r0, 0x38	; 56
  7c:	02 fe       	sbrs	r0, 2
  7e:	fd cf       	rjmp	.-6      	; 0x7a <T0Delay+0xe>
   TCCR1B=0;
  80:	1e bc       	out	0x2e, r1	; 46
   TIFR=0x1<<TOV1;
  82:	84 e0       	ldi	r24, 0x04	; 4
  84:	88 bf       	out	0x38, r24	; 56
  }
  86:	08 95       	ret

00000088 <T4Delay>:
   void T4Delay()//for 18500 micro second
	{
	TCNT1H=(-3075)>>8;
  88:	83 ef       	ldi	r24, 0xF3	; 243
  8a:	8d bd       	out	0x2d, r24	; 45
  TCNT1L=(-3075);
  8c:	8d ef       	ldi	r24, 0xFD	; 253
  8e:	8c bd       	out	0x2c, r24	; 44
  TCCR1A=0x00;
  90:	1f bc       	out	0x2f, r1	; 47
  TCCR1B=0x03;
  92:	83 e0       	ldi	r24, 0x03	; 3
  94:	8e bd       	out	0x2e, r24	; 46
   while((TIFR&(0x1<<TOV1))==0);
  96:	08 b6       	in	r0, 0x38	; 56
  98:	02 fe       	sbrs	r0, 2
  9a:	fd cf       	rjmp	.-6      	; 0x96 <T4Delay+0xe>
   TCCR1B=0;
  9c:	1e bc       	out	0x2e, r1	; 46
   TIFR=0x1<<TOV1;
  9e:	84 e0       	ldi	r24, 0x04	; 4
  a0:	88 bf       	out	0x38, r24	; 56
  
   }
  a2:	08 95       	ret

000000a4 <T1Delay>:
void T1Delay()//for 8 micro second
 {
  TCNT1H=(-85)>>8;
  a4:	8f ef       	ldi	r24, 0xFF	; 255
  a6:	8d bd       	out	0x2d, r24	; 45
  TCNT1L=(-85);
  a8:	8b ea       	ldi	r24, 0xAB	; 171
  aa:	8c bd       	out	0x2c, r24	; 44
  TCCR1A=0x00;
  ac:	1f bc       	out	0x2f, r1	; 47
  TCCR1B=0x01;
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	8e bd       	out	0x2e, r24	; 46
   while((TIFR&(0x1<<TOV1))==0);
  b2:	08 b6       	in	r0, 0x38	; 56
  b4:	02 fe       	sbrs	r0, 2
  b6:	fd cf       	rjmp	.-6      	; 0xb2 <T1Delay+0xe>
   TCCR1B=0;
  b8:	1e bc       	out	0x2e, r1	; 46
   TIFR=0x1<<TOV1;
  ba:	84 e0       	ldi	r24, 0x04	; 4
  bc:	88 bf       	out	0x38, r24	; 56
   }
  be:	08 95       	ret

000000c0 <T5Delay>:
   void T5Delay()//for 19992 micro second
	{
	TCNT1H=(-3323)>>8;
  c0:	83 ef       	ldi	r24, 0xF3	; 243
  c2:	8d bd       	out	0x2d, r24	; 45
  TCNT1L=(-3323);
  c4:	85 e0       	ldi	r24, 0x05	; 5
  c6:	8c bd       	out	0x2c, r24	; 44
  TCCR1A=0x00;
  c8:	1f bc       	out	0x2f, r1	; 47
  TCCR1B=0x03;
  ca:	83 e0       	ldi	r24, 0x03	; 3
  cc:	8e bd       	out	0x2e, r24	; 46
   while((TIFR&(0x1<<TOV1))==0);
  ce:	08 b6       	in	r0, 0x38	; 56
  d0:	02 fe       	sbrs	r0, 2
  d2:	fd cf       	rjmp	.-6      	; 0xce <T5Delay+0xe>
   TCCR1B=0;
  d4:	1e bc       	out	0x2e, r1	; 46
   TIFR=0x1<<TOV1;
  d6:	84 e0       	ldi	r24, 0x04	; 4
  d8:	88 bf       	out	0x38, r24	; 56
  
   }
  da:	08 95       	ret

000000dc <main>:
void T2Delay();
void T4Delay();
void T5Delay();
void T6Delay();
void main()
{
  dc:	cf 92       	push	r12
  de:	df 92       	push	r13
  e0:	ef 92       	push	r14
  e2:	ff 92       	push	r15
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
 
 
 DDRB = 0xFF;
  ec:	8f ef       	ldi	r24, 0xFF	; 255
  ee:	87 bb       	out	0x17, r24	; 23
  f0:	88 e8       	ldi	r24, 0x88	; 136
  f2:	93 e1       	ldi	r25, 0x13	; 19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  f4:	24 e1       	ldi	r18, 0x14	; 20
  f6:	31 e0       	ldi	r19, 0x01	; 1
  f8:	f9 01       	movw	r30, r18
  fa:	31 97       	sbiw	r30, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <main+0x1e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fe:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 100:	d9 f7       	brne	.-10     	; 0xf8 <main+0x1c>
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	93 e3       	ldi	r25, 0x33	; 51
 108:	c9 2e       	mov	r12, r25
 10a:	90 e1       	ldi	r25, 0x10	; 16
 10c:	d9 2e       	mov	r13, r25
 {


for (i=0;i<=20;i++)
 {
  PORTB|=(1<<0);
 10e:	8c ec       	ldi	r24, 0xCC	; 204
 110:	e8 2e       	mov	r14, r24
 112:	87 ec       	ldi	r24, 0xC7	; 199
 114:	f8 2e       	mov	r15, r24
 116:	04 e1       	ldi	r16, 0x14	; 20
 118:	11 e0       	ldi	r17, 0x01	; 1
 11a:	0a c0       	rjmp	.+20     	; 0x130 <main+0x54>
 11c:	c0 9a       	sbi	0x18, 0	; 24
 11e:	c6 01       	movw	r24, r12
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0x44>
 // T0Delay();
  _delay_us(1500);
  PORTB&=~(1<<0);
 124:	c0 98       	cbi	0x18, 0	; 24
 126:	c7 01       	movw	r24, r14
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0x4c>

 while(1)
 {


for (i=0;i<=20;i++)
 12c:	2f 5f       	subi	r18, 0xFF	; 255
 12e:	3f 4f       	sbci	r19, 0xFF	; 255
 130:	25 31       	cpi	r18, 0x15	; 21
 132:	31 05       	cpc	r19, r1
 134:	9c f3       	brlt	.-26     	; 0x11c <main+0x40>
 136:	80 e4       	ldi	r24, 0x40	; 64
 138:	9f e1       	ldi	r25, 0x1F	; 31
 13a:	f8 01       	movw	r30, r16
 13c:	31 97       	sbiw	r30, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <main+0x60>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 140:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 142:	d9 f7       	brne	.-10     	; 0x13a <main+0x5e>
 144:	c0 e0       	ldi	r28, 0x00	; 0
 146:	d0 e0       	ldi	r29, 0x00	; 0
 }
 _delay_ms(800);
*/  
for (j=0;j<=50;j++)
 {
  PORTB|=(1<<0);
 148:	c0 9a       	sbi	0x18, 0	; 24
  T1Delay();
 14a:	0e 94 52 00 	call	0xa4	; 0xa4 <T1Delay>
  //_delay_us(8);
  PORTB&=~(1<<0);
 14e:	c0 98       	cbi	0x18, 0	; 24
 T5Delay();
 150:	0e 94 60 00 	call	0xc0	; 0xc0 <T5Delay>
// _delay_us(17750);
   
 }
 _delay_ms(800);
*/  
for (j=0;j<=50;j++)
 154:	21 96       	adiw	r28, 0x01	; 1
 156:	c3 33       	cpi	r28, 0x33	; 51
 158:	d1 05       	cpc	r29, r1
 15a:	b1 f7       	brne	.-20     	; 0x148 <main+0x6c>
 15c:	80 e4       	ldi	r24, 0x40	; 64
 15e:	9f e1       	ldi	r25, 0x1F	; 31
 160:	f8 01       	movw	r30, r16
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <main+0x86>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 166:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 168:	d9 f7       	brne	.-10     	; 0x160 <main+0x84>
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	e0 cf       	rjmp	.-64     	; 0x130 <main+0x54>

00000170 <T2Delay>:
   TIFR=0x1<<TOV1;
  
   }
void T2Delay()//for 2250 micro second
 {
  TCNT1H=(-23936)>>8;//0xB1;
 170:	82 ea       	ldi	r24, 0xA2	; 162
 172:	8d bd       	out	0x2d, r24	; 45
  TCNT1L=(-23936);
 174:	80 e8       	ldi	r24, 0x80	; 128
 176:	8c bd       	out	0x2c, r24	; 44
  TCCR1A=0x00;
 178:	1f bc       	out	0x2f, r1	; 47
  TCCR1B=0x01;
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	8e bd       	out	0x2e, r24	; 46
   while((TIFR&(0x1<<TOV1))==0);
 17e:	08 b6       	in	r0, 0x38	; 56
 180:	02 fe       	sbrs	r0, 2
 182:	fd cf       	rjmp	.-6      	; 0x17e <T2Delay+0xe>
   TCCR1B=0;
 184:	1e bc       	out	0x2e, r1	; 46
   TIFR=0x1<<TOV1;
 186:	84 e0       	ldi	r24, 0x04	; 4
 188:	88 bf       	out	0x38, r24	; 56
   }
 18a:	08 95       	ret

0000018c <T6Delay>:
void T6Delay()//for 17750 micro second
	{
	TCNT1H=(-2950)>>8;
 18c:	84 ef       	ldi	r24, 0xF4	; 244
 18e:	8d bd       	out	0x2d, r24	; 45
  TCNT1L=(-2950);
 190:	8a e7       	ldi	r24, 0x7A	; 122
 192:	8c bd       	out	0x2c, r24	; 44
  TCCR1A=0x00;
 194:	1f bc       	out	0x2f, r1	; 47
  TCCR1B=0x03;
 196:	83 e0       	ldi	r24, 0x03	; 3
 198:	8e bd       	out	0x2e, r24	; 46
   while((TIFR&(0x1<<TOV1))==0);
 19a:	08 b6       	in	r0, 0x38	; 56
 19c:	02 fe       	sbrs	r0, 2
 19e:	fd cf       	rjmp	.-6      	; 0x19a <T6Delay+0xe>
   TCCR1B=0;
 1a0:	1e bc       	out	0x2e, r1	; 46
   TIFR=0x1<<TOV1;
 1a2:	84 e0       	ldi	r24, 0x04	; 4
 1a4:	88 bf       	out	0x38, r24	; 56
  
   }
 1a6:	08 95       	ret

000001a8 <_exit>:
 1a8:	f8 94       	cli

000001aa <__stop_program>:
 1aa:	ff cf       	rjmp	.-2      	; 0x1aa <__stop_program>
